<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="nHydrate.Dsl.nHydrateDomainModel.Description" xml:space="preserve">
    <value>This is the nHydrate Visual Modeler</value>
    <comment>Description for DslLibrary &apos;nHydrate&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateDomainModel.DisplayName" xml:space="preserve">
    <value>nHydrate ORM Modeler</value>
    <comment>DisplayName for DslLibrary &apos;nHydrate&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel.DisplayName" xml:space="preserve">
    <value>nHydrate Model</value>
    <comment>DisplayName for DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/CompanyName.Description" xml:space="preserve">
    <value>Specifies the company name that will be used to build namespaces</value>
    <comment>Description for DomainProperty &apos;CompanyName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/CompanyName.DisplayName" xml:space="preserve">
    <value>Company Name</value>
    <comment>DisplayName for DomainProperty &apos;CompanyName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/CompanyName.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;CompanyName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/DefaultNamespace.Description" xml:space="preserve">
    <value>Determines the default namespace and base project names of all generated projects. Leave blank for the default value of CompanyName.ProjectName</value>
    <comment>Description for DomainProperty &apos;DefaultNamespace&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/DefaultNamespace.DisplayName" xml:space="preserve">
    <value>Default Namespace</value>
    <comment>DisplayName for DomainProperty &apos;DefaultNamespace&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/DefaultNamespace.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;DefaultNamespace&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ProjectName.Description" xml:space="preserve">
    <value>Specifies the name of the generated assembly</value>
    <comment>Description for DomainProperty &apos;ProjectName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ProjectName.DisplayName" xml:space="preserve">
    <value>Project Name</value>
    <comment>DisplayName for DomainProperty &apos;ProjectName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ProjectName.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;ProjectName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/UseUTCTime.Description" xml:space="preserve">
    <value>Specifies whether UTC or local time is used for the created and modified audits</value>
    <comment>Description for DomainProperty &apos;UseUTCTime&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/UseUTCTime.DisplayName" xml:space="preserve">
    <value>Use UTCTime</value>
    <comment>DisplayName for DomainProperty &apos;UseUTCTime&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/UseUTCTime.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;UseUTCTime&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/Version.Description" xml:space="preserve">
    <value>Specifies the version number of the generated assembly</value>
    <comment>Description for DomainProperty &apos;Version&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/Version.DisplayName" xml:space="preserve">
    <value>Version</value>
    <comment>DisplayName for DomainProperty &apos;Version&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/Version.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Version&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/CreatedByColumnName.Description" xml:space="preserve">
    <value>Determines the name of the created by field</value>
    <comment>Description for DomainProperty &apos;CreatedByColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/CreatedByColumnName.DisplayName" xml:space="preserve">
    <value>Created By Column Name</value>
    <comment>DisplayName for DomainProperty &apos;CreatedByColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/CreatedByColumnName.Category" xml:space="preserve">
    <value>Code</value>
    <comment>Category for DomainProperty &apos;CreatedByColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/CreatedDateColumnName.Description" xml:space="preserve">
    <value>Determines the name of the created date field</value>
    <comment>Description for DomainProperty &apos;CreatedDateColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/CreatedDateColumnName.DisplayName" xml:space="preserve">
    <value>Created Date Column Name</value>
    <comment>DisplayName for DomainProperty &apos;CreatedDateColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/CreatedDateColumnName.Category" xml:space="preserve">
    <value>Code</value>
    <comment>Category for DomainProperty &apos;CreatedDateColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ModifiedDateColumnName.Description" xml:space="preserve">
    <value>Determines the name of the modified date field</value>
    <comment>Description for DomainProperty &apos;ModifiedDateColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ModifiedDateColumnName.DisplayName" xml:space="preserve">
    <value>Modified Date Column Name</value>
    <comment>DisplayName for DomainProperty &apos;ModifiedDateColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ModifiedDateColumnName.Category" xml:space="preserve">
    <value>Code</value>
    <comment>Category for DomainProperty &apos;ModifiedDateColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ModifiedByColumnName.Description" xml:space="preserve">
    <value>Determines the name of the modified by field</value>
    <comment>Description for DomainProperty &apos;ModifiedByColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ModifiedByColumnName.DisplayName" xml:space="preserve">
    <value>Modified By Column Name</value>
    <comment>DisplayName for DomainProperty &apos;ModifiedByColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ModifiedByColumnName.Category" xml:space="preserve">
    <value>Code</value>
    <comment>Category for DomainProperty &apos;ModifiedByColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ConcurrencyCheckColumnName.Description" xml:space="preserve">
    <value>Determines the name of the column used for optimistic concurrency</value>
    <comment>Description for DomainProperty &apos;ConcurrencyCheckColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ConcurrencyCheckColumnName.DisplayName" xml:space="preserve">
    <value>Concurrency Check Column Name</value>
    <comment>DisplayName for DomainProperty &apos;ConcurrencyCheckColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ConcurrencyCheckColumnName.Category" xml:space="preserve">
    <value>Code</value>
    <comment>Category for DomainProperty &apos;ConcurrencyCheckColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/GrantUser.Description" xml:space="preserve">
    <value>Determines the database user to grant access permissions to for database objects</value>
    <comment>Description for DomainProperty &apos;GrantUser&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/GrantUser.DisplayName" xml:space="preserve">
    <value>Grant User</value>
    <comment>DisplayName for DomainProperty &apos;GrantUser&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/GrantUser.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;GrantUser&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ModelToDisk.Description" xml:space="preserve">
    <value>Determines if model objects are duplicated on disk for easy editing</value>
    <comment>Description for DomainProperty &apos;ModelToDisk&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ModelToDisk.DisplayName" xml:space="preserve">
    <value>Model To Disk</value>
    <comment>DisplayName for DomainProperty &apos;ModelToDisk&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ModelToDisk.Category" xml:space="preserve">
    <value>Behavior</value>
    <comment>Category for DomainProperty &apos;ModelToDisk&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ModelVersion.Description" xml:space="preserve">
    <value>Determines the version of the model. Used for tracking changes and provides an upgrade path for older models</value>
    <comment>Description for DomainProperty &apos;ModelVersion&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ModelVersion.DisplayName" xml:space="preserve">
    <value>Model Version</value>
    <comment>DisplayName for DomainProperty &apos;ModelVersion&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/ModelVersion.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;ModelVersion&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/OutputTarget.Description" xml:space="preserve">
    <value>The target location for generated projects</value>
    <comment>Description for DomainProperty &apos;OutputTarget&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/OutputTarget.DisplayName" xml:space="preserve">
    <value>Output Target</value>
    <comment>DisplayName for DomainProperty &apos;OutputTarget&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/OutputTarget.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;OutputTarget&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/TenantColumnName.Description" xml:space="preserve">
    <value>Determines the name of the column to hold tenant information for tenant tables</value>
    <comment>Description for DomainProperty &apos;TenantColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/TenantColumnName.DisplayName" xml:space="preserve">
    <value>Tenant Column Name</value>
    <comment>DisplayName for DomainProperty &apos;TenantColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/TenantColumnName.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;TenantColumnName&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/EmitSafetyScripts.Description" xml:space="preserve">
    <value>Determines if normalization safety scripts are emitted into the installer</value>
    <comment>Description for DomainProperty &apos;EmitSafetyScripts&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/EmitSafetyScripts.DisplayName" xml:space="preserve">
    <value>Emit Safety Scripts</value>
    <comment>DisplayName for DomainProperty &apos;EmitSafetyScripts&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModel/EmitSafetyScripts.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;EmitSafetyScripts&apos; on DomainClass &apos;nHydrateModel&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity.Description" xml:space="preserve">
    <value>This object represents a database table</value>
    <comment>Description for DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity.DisplayName" xml:space="preserve">
    <value>Entity</value>
    <comment>DisplayName for DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/Name.Description" xml:space="preserve">
    <value>Determines the name of this entity</value>
    <comment>Description for DomainProperty &apos;Name&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/Name.DisplayName" xml:space="preserve">
    <value>Name</value>
    <comment>DisplayName for DomainProperty &apos;Name&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/Name.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Name&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/Summary.Description" xml:space="preserve">
    <value>A summary of the entity</value>
    <comment>Description for DomainProperty &apos;Summary&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/Summary.DisplayName" xml:space="preserve">
    <value>Summary</value>
    <comment>DisplayName for DomainProperty &apos;Summary&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/Summary.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Summary&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/AllowCreateAudit.Description" xml:space="preserve">
    <value>Determines if the fields &apos;CreatedBy&apos; and &apos;CreateDate&apos; are created</value>
    <comment>Description for DomainProperty &apos;AllowCreateAudit&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/AllowCreateAudit.DisplayName" xml:space="preserve">
    <value>Allow Create Audit</value>
    <comment>DisplayName for DomainProperty &apos;AllowCreateAudit&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/AllowCreateAudit.Category" xml:space="preserve">
    <value>Audit</value>
    <comment>Category for DomainProperty &apos;AllowCreateAudit&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/AllowModifyAudit.Description" xml:space="preserve">
    <value>Determines if the fields &apos;ModifiedBy&apos; and &apos;ModifiedDate&apos; are created</value>
    <comment>Description for DomainProperty &apos;AllowModifyAudit&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/AllowModifyAudit.DisplayName" xml:space="preserve">
    <value>Allow Modify Audit</value>
    <comment>DisplayName for DomainProperty &apos;AllowModifyAudit&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/AllowModifyAudit.Category" xml:space="preserve">
    <value>Audit</value>
    <comment>Category for DomainProperty &apos;AllowModifyAudit&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/AllowTimestamp.Description" xml:space="preserve">
    <value>Determines if this table will have a timestamp field created and used for synchronization</value>
    <comment>Description for DomainProperty &apos;AllowTimestamp&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/AllowTimestamp.DisplayName" xml:space="preserve">
    <value>Allow Timestamp</value>
    <comment>DisplayName for DomainProperty &apos;AllowTimestamp&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/AllowTimestamp.Category" xml:space="preserve">
    <value>Audit</value>
    <comment>Category for DomainProperty &apos;AllowTimestamp&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/IsAssociative.Description" xml:space="preserve">
    <value>Determines if this is an intermediary entity between two other entities</value>
    <comment>Description for DomainProperty &apos;IsAssociative&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/IsAssociative.DisplayName" xml:space="preserve">
    <value>Is Associative</value>
    <comment>DisplayName for DomainProperty &apos;IsAssociative&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/IsAssociative.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;IsAssociative&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/Immutable.Description" xml:space="preserve">
    <value>Determines if this entity can be changed</value>
    <comment>Description for DomainProperty &apos;Immutable&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/Immutable.DisplayName" xml:space="preserve">
    <value>Immutable</value>
    <comment>DisplayName for DomainProperty &apos;Immutable&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/Immutable.Category" xml:space="preserve">
    <value>Code</value>
    <comment>Category for DomainProperty &apos;Immutable&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/Schema.Description" xml:space="preserve">
    <value>The database schema in which this entity lives</value>
    <comment>Description for DomainProperty &apos;Schema&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/Schema.DisplayName" xml:space="preserve">
    <value>Schema</value>
    <comment>DisplayName for DomainProperty &apos;Schema&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/Schema.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;Schema&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/CodeFacade.Description" xml:space="preserve">
    <value>Determines the object name used in the API. If this property is blank the &apos;Name&apos; property is used in the API. This property can be used to mask the database identifier.</value>
    <comment>Description for DomainProperty &apos;CodeFacade&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/CodeFacade.DisplayName" xml:space="preserve">
    <value>Code Facade</value>
    <comment>DisplayName for DomainProperty &apos;CodeFacade&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/CodeFacade.Category" xml:space="preserve">
    <value>Code</value>
    <comment>Category for DomainProperty &apos;CodeFacade&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/GeneratesDoubleDerived.Description" xml:space="preserve">
    <value>If True, will generate both a base class with all functionality and a partial class to support customization through overrides</value>
    <comment>Description for DomainProperty &apos;GeneratesDoubleDerived&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/GeneratesDoubleDerived.DisplayName" xml:space="preserve">
    <value>Double Derived</value>
    <comment>DisplayName for DomainProperty &apos;GeneratesDoubleDerived&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/GeneratesDoubleDerived.Category" xml:space="preserve">
    <value>Code</value>
    <comment>Category for DomainProperty &apos;GeneratesDoubleDerived&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/TypedEntity.Description" xml:space="preserve">
    <value>Determines if this is a typed entity</value>
    <comment>Description for DomainProperty &apos;TypedEntity&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/TypedEntity.DisplayName" xml:space="preserve">
    <value>Typed Entity</value>
    <comment>DisplayName for DomainProperty &apos;TypedEntity&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/TypedEntity.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;TypedEntity&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/IsTenant.Description" xml:space="preserve">
    <value>Determines if the table is tenant based</value>
    <comment>Description for DomainProperty &apos;IsTenant&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/IsTenant.DisplayName" xml:space="preserve">
    <value>Is Tenant</value>
    <comment>DisplayName for DomainProperty &apos;IsTenant&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/IsTenant.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;IsTenant&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/CopyStateInfo.Description" xml:space="preserve">
    <value>Description for nHydrate.Dsl.Entity.Copy State Info</value>
    <comment>Description for DomainProperty &apos;CopyStateInfo&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Entity/CopyStateInfo.DisplayName" xml:space="preserve">
    <value>Copy State Info</value>
    <comment>DisplayName for DomainProperty &apos;CopyStateInfo&apos; on DomainClass &apos;Entity&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field.Description" xml:space="preserve">
    <value>This is a field in a database table</value>
    <comment>Description for DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field.DisplayName" xml:space="preserve">
    <value>Field</value>
    <comment>DisplayName for DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Name.Description" xml:space="preserve">
    <value>Determines the name of this field</value>
    <comment>Description for DomainProperty &apos;Name&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Name.DisplayName" xml:space="preserve">
    <value>Name</value>
    <comment>DisplayName for DomainProperty &apos;Name&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Name.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Name&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Nullable.Description" xml:space="preserve">
    <value>Determines if this item allows null values</value>
    <comment>Description for DomainProperty &apos;Nullable&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Nullable.DisplayName" xml:space="preserve">
    <value>Nullable</value>
    <comment>DisplayName for DomainProperty &apos;Nullable&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Nullable.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Nullable&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/IsCalculated.Description" xml:space="preserve">
    <value>Determines if this field is based on a calculated database column</value>
    <comment>Description for DomainProperty &apos;IsCalculated&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/IsCalculated.DisplayName" xml:space="preserve">
    <value>Is Calculated</value>
    <comment>DisplayName for DomainProperty &apos;IsCalculated&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/IsCalculated.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;IsCalculated&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/DataType.Description" xml:space="preserve">
    <value>Determines the data type of this field</value>
    <comment>Description for DomainProperty &apos;DataType&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/DataType.DisplayName" xml:space="preserve">
    <value>Datatype</value>
    <comment>DisplayName for DomainProperty &apos;DataType&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/DataType.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;DataType&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Default.Description" xml:space="preserve">
    <value>Determines the default value of this field</value>
    <comment>Description for DomainProperty &apos;Default&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Default.DisplayName" xml:space="preserve">
    <value>Default</value>
    <comment>DisplayName for DomainProperty &apos;Default&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Default.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Default&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Summary.Description" xml:space="preserve">
    <value>Determines summary text were applicable</value>
    <comment>Description for DomainProperty &apos;Summary&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Summary.DisplayName" xml:space="preserve">
    <value>Summary</value>
    <comment>DisplayName for DomainProperty &apos;Summary&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Summary.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Summary&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Formula.Description" xml:space="preserve">
    <value>The formula for a computed field</value>
    <comment>Description for DomainProperty &apos;Formula&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Formula.DisplayName" xml:space="preserve">
    <value>Formula</value>
    <comment>DisplayName for DomainProperty &apos;Formula&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Formula.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;Formula&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Identity.Description" xml:space="preserve">
    <value>Determines the type of identity for this column</value>
    <comment>Description for DomainProperty &apos;Identity&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Identity.DisplayName" xml:space="preserve">
    <value>Identity</value>
    <comment>DisplayName for DomainProperty &apos;Identity&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Identity.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Identity&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/IsIndexed.Description" xml:space="preserve">
    <value>Determines if this field has an associated database index</value>
    <comment>Description for DomainProperty &apos;IsIndexed&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/IsIndexed.DisplayName" xml:space="preserve">
    <value>Is Indexed</value>
    <comment>DisplayName for DomainProperty &apos;IsIndexed&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/IsIndexed.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;IsIndexed&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/IsUnique.Description" xml:space="preserve">
    <value>Determines if this field is marked as unique</value>
    <comment>Description for DomainProperty &apos;IsUnique&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/IsUnique.DisplayName" xml:space="preserve">
    <value>Is Unique</value>
    <comment>DisplayName for DomainProperty &apos;IsUnique&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/IsUnique.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;IsUnique&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Length.Description" xml:space="preserve">
    <value>Determines the size of this column in bytes</value>
    <comment>Description for DomainProperty &apos;Length&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Length.DisplayName" xml:space="preserve">
    <value>Length</value>
    <comment>DisplayName for DomainProperty &apos;Length&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Length.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Length&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/IsPrimaryKey.Description" xml:space="preserve">
    <value>Determine if this field is the entity primary key</value>
    <comment>Description for DomainProperty &apos;IsPrimaryKey&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/IsPrimaryKey.DisplayName" xml:space="preserve">
    <value>Is Primary Key</value>
    <comment>DisplayName for DomainProperty &apos;IsPrimaryKey&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/IsPrimaryKey.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;IsPrimaryKey&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Scale.Description" xml:space="preserve">
    <value>Determines the scale of some data types</value>
    <comment>Description for DomainProperty &apos;Scale&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Scale.DisplayName" xml:space="preserve">
    <value>Scale</value>
    <comment>DisplayName for DomainProperty &apos;Scale&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Scale.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Scale&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/CodeFacade.Description" xml:space="preserve">
    <value>Determines the object name used in the API. If this property is blank the &apos;Name&apos; property is used in the API. This property can be used to mask the database identifier.</value>
    <comment>Description for DomainProperty &apos;CodeFacade&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/CodeFacade.DisplayName" xml:space="preserve">
    <value>Code Facade</value>
    <comment>DisplayName for DomainProperty &apos;CodeFacade&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/CodeFacade.Category" xml:space="preserve">
    <value>Code</value>
    <comment>Category for DomainProperty &apos;CodeFacade&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/IsReadOnly.Description" xml:space="preserve">
    <value>Determines if the property can be set in code</value>
    <comment>Description for DomainProperty &apos;IsReadOnly&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/IsReadOnly.DisplayName" xml:space="preserve">
    <value>Is Read Only</value>
    <comment>DisplayName for DomainProperty &apos;IsReadOnly&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/IsReadOnly.Category" xml:space="preserve">
    <value>Code</value>
    <comment>Category for DomainProperty &apos;IsReadOnly&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/SortOrder.Description" xml:space="preserve">
    <value>Order Entered/Database order</value>
    <comment>Description for DomainProperty &apos;SortOrder&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/SortOrder.DisplayName" xml:space="preserve">
    <value>Sort Order</value>
    <comment>DisplayName for DomainProperty &apos;SortOrder&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/DataFormatString.Description" xml:space="preserve">
    <value>Identifies the format string for data input and presentation</value>
    <comment>Description for DomainProperty &apos;DataFormatString&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/DataFormatString.DisplayName" xml:space="preserve">
    <value>Data Format String</value>
    <comment>DisplayName for DomainProperty &apos;DataFormatString&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/DataFormatString.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;DataFormatString&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/DefaultIsFunc.Description" xml:space="preserve">
    <value>Determines if the default value is a function</value>
    <comment>Description for DomainProperty &apos;DefaultIsFunc&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/DefaultIsFunc.DisplayName" xml:space="preserve">
    <value>Default Is Func</value>
    <comment>DisplayName for DomainProperty &apos;DefaultIsFunc&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/DefaultIsFunc.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;DefaultIsFunc&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/ImportedDefaultName.Description" xml:space="preserve">
    <value>The imported database default name</value>
    <comment>Description for DomainProperty &apos;ImportedDefaultName&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/ImportedDefaultName.DisplayName" xml:space="preserve">
    <value>Imported Default Name</value>
    <comment>DisplayName for DomainProperty &apos;ImportedDefaultName&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Obsolete.Description" xml:space="preserve">
    <value>Determines if this property should create a compiler warning</value>
    <comment>Description for DomainProperty &apos;Obsolete&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Obsolete.DisplayName" xml:space="preserve">
    <value>Obsolete</value>
    <comment>DisplayName for DomainProperty &apos;Obsolete&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Field/Obsolete.Category" xml:space="preserve">
    <value>Code</value>
    <comment>Category for DomainProperty &apos;Obsolete&apos; on DomainClass &apos;Field&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View.Description" xml:space="preserve">
    <value>This is a custom database view</value>
    <comment>Description for DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View.DisplayName" xml:space="preserve">
    <value>View</value>
    <comment>DisplayName for DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/SQL.Description" xml:space="preserve">
    <value>Determines SQL statement used to create the database view object</value>
    <comment>Description for DomainProperty &apos;SQL&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/SQL.DisplayName" xml:space="preserve">
    <value>SQL</value>
    <comment>DisplayName for DomainProperty &apos;SQL&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/SQL.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;SQL&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/Name.Description" xml:space="preserve">
    <value>Determines the name of this object</value>
    <comment>Description for DomainProperty &apos;Name&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/Name.DisplayName" xml:space="preserve">
    <value>Name</value>
    <comment>DisplayName for DomainProperty &apos;Name&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/Name.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Name&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/CodeFacade.Description" xml:space="preserve">
    <value>Determines the object name used in the API. If this property is blank the &apos;Name&apos; property is used in the API. This property can be used to mask the database identifier.</value>
    <comment>Description for DomainProperty &apos;CodeFacade&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/CodeFacade.DisplayName" xml:space="preserve">
    <value>Code Facade</value>
    <comment>DisplayName for DomainProperty &apos;CodeFacade&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/CodeFacade.Category" xml:space="preserve">
    <value>Code</value>
    <comment>Category for DomainProperty &apos;CodeFacade&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/Summary.Description" xml:space="preserve">
    <value>Determines the summary of this object</value>
    <comment>Description for DomainProperty &apos;Summary&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/Summary.DisplayName" xml:space="preserve">
    <value>Summary</value>
    <comment>DisplayName for DomainProperty &apos;Summary&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/Summary.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Summary&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/Schema.Description" xml:space="preserve">
    <value>Determines the parent schema for this object</value>
    <comment>Description for DomainProperty &apos;Schema&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/Schema.DisplayName" xml:space="preserve">
    <value>Schema</value>
    <comment>DisplayName for DomainProperty &apos;Schema&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/Schema.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;Schema&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/GeneratesDoubleDerived.Description" xml:space="preserve">
    <value>If True, will generate both a base class with all functionality and a partial class to support customization through overrides</value>
    <comment>Description for DomainProperty &apos;GeneratesDoubleDerived&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/GeneratesDoubleDerived.DisplayName" xml:space="preserve">
    <value>Generates Double Derived</value>
    <comment>DisplayName for DomainProperty &apos;GeneratesDoubleDerived&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.View/GeneratesDoubleDerived.Category" xml:space="preserve">
    <value>Code</value>
    <comment>Category for DomainProperty &apos;GeneratesDoubleDerived&apos; on DomainClass &apos;View&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField.DisplayName" xml:space="preserve">
    <value>Field</value>
    <comment>DisplayName for DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Name.Description" xml:space="preserve">
    <value>Determines the name of this object</value>
    <comment>Description for DomainProperty &apos;Name&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Name.DisplayName" xml:space="preserve">
    <value>Name</value>
    <comment>DisplayName for DomainProperty &apos;Name&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Name.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Name&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Nullable.Description" xml:space="preserve">
    <value>Determines if this item allows null values</value>
    <comment>Description for DomainProperty &apos;Nullable&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Nullable.DisplayName" xml:space="preserve">
    <value>Nullable</value>
    <comment>DisplayName for DomainProperty &apos;Nullable&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Nullable.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Nullable&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/DataType.Description" xml:space="preserve">
    <value>Determines the data type of this field</value>
    <comment>Description for DomainProperty &apos;DataType&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/DataType.DisplayName" xml:space="preserve">
    <value>Datatype</value>
    <comment>DisplayName for DomainProperty &apos;DataType&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/DataType.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;DataType&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Default.Description" xml:space="preserve">
    <value>Determines the default value of this object</value>
    <comment>Description for DomainProperty &apos;Default&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Default.DisplayName" xml:space="preserve">
    <value>Default</value>
    <comment>DisplayName for DomainProperty &apos;Default&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Default.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Default&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Summary.Description" xml:space="preserve">
    <value>Determines the summary of this object</value>
    <comment>Description for DomainProperty &apos;Summary&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Summary.DisplayName" xml:space="preserve">
    <value>Summary</value>
    <comment>DisplayName for DomainProperty &apos;Summary&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Summary.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Summary&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Length.Description" xml:space="preserve">
    <value>Determines the size of this field in bytes</value>
    <comment>Description for DomainProperty &apos;Length&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Length.DisplayName" xml:space="preserve">
    <value>Length</value>
    <comment>DisplayName for DomainProperty &apos;Length&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Length.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Length&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Scale.Description" xml:space="preserve">
    <value>Determines the scale of some data types</value>
    <comment>Description for DomainProperty &apos;Scale&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Scale.DisplayName" xml:space="preserve">
    <value>Scale</value>
    <comment>DisplayName for DomainProperty &apos;Scale&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/Scale.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Scale&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/CodeFacade.Description" xml:space="preserve">
    <value>Determines the object name used in the API. If this property is blank the &apos;Name&apos; property is used in the API. This property can be used to mask the database identifier.</value>
    <comment>Description for DomainProperty &apos;CodeFacade&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/CodeFacade.DisplayName" xml:space="preserve">
    <value>Code Facade</value>
    <comment>DisplayName for DomainProperty &apos;CodeFacade&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/CodeFacade.Category" xml:space="preserve">
    <value>Code</value>
    <comment>Category for DomainProperty &apos;CodeFacade&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/IsPrimaryKey.Description" xml:space="preserve">
    <value>Determine if this field is the entity primary key</value>
    <comment>Description for DomainProperty &apos;IsPrimaryKey&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/IsPrimaryKey.DisplayName" xml:space="preserve">
    <value>Is Primary Key</value>
    <comment>DisplayName for DomainProperty &apos;IsPrimaryKey&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewField/IsPrimaryKey.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;IsPrimaryKey&apos; on DomainClass &apos;ViewField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.RelationField.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;RelationField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.RelationField.DisplayName" xml:space="preserve">
    <value>Relation Field</value>
    <comment>DisplayName for DomainClass &apos;RelationField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.RelationField/SourceFieldId.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainProperty &apos;SourceFieldId&apos; on DomainClass &apos;RelationField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.RelationField/SourceFieldId.DisplayName" xml:space="preserve">
    <value>Source Field Id</value>
    <comment>DisplayName for DomainProperty &apos;SourceFieldId&apos; on DomainClass &apos;RelationField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.RelationField/TargetFieldId.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainProperty &apos;TargetFieldId&apos; on DomainClass &apos;RelationField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.RelationField/TargetFieldId.DisplayName" xml:space="preserve">
    <value>Target Field Id</value>
    <comment>DisplayName for DomainProperty &apos;TargetFieldId&apos; on DomainClass &apos;RelationField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.RelationField/RelationID.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainProperty &apos;RelationID&apos; on DomainClass &apos;RelationField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.RelationField/RelationID.DisplayName" xml:space="preserve">
    <value>Relation ID</value>
    <comment>DisplayName for DomainProperty &apos;RelationID&apos; on DomainClass &apos;RelationField&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.StaticData.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;StaticData&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.StaticData.DisplayName" xml:space="preserve">
    <value>Static Data</value>
    <comment>DisplayName for DomainClass &apos;StaticData&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.StaticData/ColumnKey.Description" xml:space="preserve">
    <value>The column identifier for the field value</value>
    <comment>Description for DomainProperty &apos;ColumnKey&apos; on DomainClass &apos;StaticData&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.StaticData/ColumnKey.DisplayName" xml:space="preserve">
    <value>Column Key</value>
    <comment>DisplayName for DomainProperty &apos;ColumnKey&apos; on DomainClass &apos;StaticData&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.StaticData/Value.Description" xml:space="preserve">
    <value>The value for this column in the current record</value>
    <comment>Description for DomainProperty &apos;Value&apos; on DomainClass &apos;StaticData&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.StaticData/Value.DisplayName" xml:space="preserve">
    <value>Value</value>
    <comment>DisplayName for DomainProperty &apos;Value&apos; on DomainClass &apos;StaticData&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.StaticData/OrderKey.Description" xml:space="preserve">
    <value>The record number [1..N]</value>
    <comment>Description for DomainProperty &apos;OrderKey&apos; on DomainClass &apos;StaticData&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.StaticData/OrderKey.DisplayName" xml:space="preserve">
    <value>Order Key</value>
    <comment>DisplayName for DomainProperty &apos;OrderKey&apos; on DomainClass &apos;StaticData&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index.Description" xml:space="preserve">
    <value>A defined index for an entity</value>
    <comment>Description for DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index.DisplayName" xml:space="preserve">
    <value>Index</value>
    <comment>DisplayName for DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/ParentEntityID.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainProperty &apos;ParentEntityID&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/ParentEntityID.DisplayName" xml:space="preserve">
    <value>Parent Entity</value>
    <comment>DisplayName for DomainProperty &apos;ParentEntityID&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/ParentEntityID.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;ParentEntityID&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/IsUnique.Description" xml:space="preserve">
    <value>Determines if this index is unique</value>
    <comment>Description for DomainProperty &apos;IsUnique&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/IsUnique.DisplayName" xml:space="preserve">
    <value>Is Unique</value>
    <comment>DisplayName for DomainProperty &apos;IsUnique&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/IsUnique.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;IsUnique&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/Summary.Description" xml:space="preserve">
    <value>Determines the summary of this object</value>
    <comment>Description for DomainProperty &apos;Summary&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/Summary.DisplayName" xml:space="preserve">
    <value>Summary</value>
    <comment>DisplayName for DomainProperty &apos;Summary&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/Summary.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Summary&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/Definition.Description" xml:space="preserve">
    <value>The columns in the index</value>
    <comment>Description for DomainProperty &apos;Definition&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/Definition.DisplayName" xml:space="preserve">
    <value>Definition</value>
    <comment>DisplayName for DomainProperty &apos;Definition&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/Definition.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Definition&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/IndexType.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainProperty &apos;IndexType&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/IndexType.DisplayName" xml:space="preserve">
    <value>Index Type</value>
    <comment>DisplayName for DomainProperty &apos;IndexType&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/ImportedName.Description" xml:space="preserve">
    <value>The original name imported from database</value>
    <comment>Description for DomainProperty &apos;ImportedName&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/ImportedName.DisplayName" xml:space="preserve">
    <value>Imported Name</value>
    <comment>DisplayName for DomainProperty &apos;ImportedName&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/Clustered.Description" xml:space="preserve">
    <value>Create this a a clustered index</value>
    <comment>Description for DomainProperty &apos;Clustered&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/Clustered.DisplayName" xml:space="preserve">
    <value>Clustered</value>
    <comment>DisplayName for DomainProperty &apos;Clustered&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.Index/Clustered.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Clustered&apos; on DomainClass &apos;Index&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexColumn.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;IndexColumn&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexColumn.DisplayName" xml:space="preserve">
    <value>Index Column</value>
    <comment>DisplayName for DomainClass &apos;IndexColumn&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexColumn/FieldID.Description" xml:space="preserve">
    <value>The referenced entity field</value>
    <comment>Description for DomainProperty &apos;FieldID&apos; on DomainClass &apos;IndexColumn&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexColumn/FieldID.DisplayName" xml:space="preserve">
    <value>Field</value>
    <comment>DisplayName for DomainProperty &apos;FieldID&apos; on DomainClass &apos;IndexColumn&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexColumn/FieldID.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;FieldID&apos; on DomainClass &apos;IndexColumn&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexColumn/Ascending.Description" xml:space="preserve">
    <value>Determines if this column is indexed in ascending order</value>
    <comment>Description for DomainProperty &apos;Ascending&apos; on DomainClass &apos;IndexColumn&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexColumn/Ascending.DisplayName" xml:space="preserve">
    <value>Ascending</value>
    <comment>DisplayName for DomainProperty &apos;Ascending&apos; on DomainClass &apos;IndexColumn&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexColumn/Ascending.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Ascending&apos; on DomainClass &apos;IndexColumn&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexColumn/Definition.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainProperty &apos;Definition&apos; on DomainClass &apos;IndexColumn&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexColumn/Definition.DisplayName" xml:space="preserve">
    <value>Definition</value>
    <comment>DisplayName for DomainProperty &apos;Definition&apos; on DomainClass &apos;IndexColumn&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexColumn/SortOrder.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainProperty &apos;SortOrder&apos; on DomainClass &apos;IndexColumn&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexColumn/SortOrder.DisplayName" xml:space="preserve">
    <value>Sort Order</value>
    <comment>DisplayName for DomainProperty &apos;SortOrder&apos; on DomainClass &apos;IndexColumn&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasEntities.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;nHydrateModelHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasEntities.DisplayName" xml:space="preserve">
    <value>nHydrate Model Has Elements</value>
    <comment>DisplayName for DomainClass &apos;nHydrateModelHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasEntities/nHydrateModel.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;nHydrateModel&apos; on DomainRelationship &apos;nHydrateModelHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasEntities/nHydrateModel.DisplayName" xml:space="preserve">
    <value>nHydrate Model</value>
    <comment>DisplayName for DomainRole &apos;nHydrateModel&apos; on DomainRelationship &apos;nHydrateModelHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasEntities/nHydrateModel.PropertyDisplayName" xml:space="preserve">
    <value>Entities</value>
    <comment>PropertyDisplayName for DomainRole &apos;nHydrateModel&apos; on DomainRelationship &apos;nHydrateModelHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasEntities/Entity.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;Entity&apos; on DomainRelationship &apos;nHydrateModelHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasEntities/Entity.DisplayName" xml:space="preserve">
    <value>Entity</value>
    <comment>DisplayName for DomainRole &apos;Entity&apos; on DomainRelationship &apos;nHydrateModelHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasEntities/Entity.PropertyDisplayName" xml:space="preserve">
    <value>nHydrate Model</value>
    <comment>PropertyDisplayName for DomainRole &apos;Entity&apos; on DomainRelationship &apos;nHydrateModelHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities.Description" xml:space="preserve">
    <value>Association relationship between entities</value>
    <comment>Description for DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities.DisplayName" xml:space="preserve">
    <value>Entity Has Entities</value>
    <comment>DisplayName for DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/Multiplicity.Description" xml:space="preserve">
    <value>Determines the multiplicity of this relationship</value>
    <comment>Description for DomainProperty &apos;Multiplicity&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/Multiplicity.DisplayName" xml:space="preserve">
    <value>Multiplicity</value>
    <comment>DisplayName for DomainProperty &apos;Multiplicity&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/Multiplicity.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;Multiplicity&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/RoleName.Description" xml:space="preserve">
    <value>The named relation necessary when there is more than one relation between two entities</value>
    <comment>Description for DomainProperty &apos;RoleName&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/RoleName.DisplayName" xml:space="preserve">
    <value>Role Name</value>
    <comment>DisplayName for DomainProperty &apos;RoleName&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/RoleName.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;RoleName&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/IsEnforced.Description" xml:space="preserve">
    <value>Determines if this relationship is enfored in the database or just in code</value>
    <comment>Description for DomainProperty &apos;IsEnforced&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/IsEnforced.DisplayName" xml:space="preserve">
    <value>Is Enforced</value>
    <comment>DisplayName for DomainProperty &apos;IsEnforced&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/IsEnforced.Category" xml:space="preserve">
    <value>Definition</value>
    <comment>Category for DomainProperty &apos;IsEnforced&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/ImportData.Description" xml:space="preserve">
    <value>Internal data to track imports</value>
    <comment>Description for DomainProperty &apos;ImportData&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/ImportData.DisplayName" xml:space="preserve">
    <value>Import Data</value>
    <comment>DisplayName for DomainProperty &apos;ImportData&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/Summary.Description" xml:space="preserve">
    <value>Determines summary text were applicable</value>
    <comment>Description for DomainProperty &apos;Summary&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/Summary.DisplayName" xml:space="preserve">
    <value>Summary</value>
    <comment>DisplayName for DomainProperty &apos;Summary&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/Summary.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Summary&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/ImportedConstraintName.Description" xml:space="preserve">
    <value>The imported database constraint name</value>
    <comment>Description for DomainProperty &apos;ImportedConstraintName&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/ImportedConstraintName.DisplayName" xml:space="preserve">
    <value>Imported Constraint Name</value>
    <comment>DisplayName for DomainProperty &apos;ImportedConstraintName&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/DeleteAction.Description" xml:space="preserve">
    <value>Determines the action on chld objects when principal entity is deleted</value>
    <comment>Description for DomainProperty &apos;DeleteAction&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/DeleteAction.DisplayName" xml:space="preserve">
    <value>Delete Action</value>
    <comment>DisplayName for DomainProperty &apos;DeleteAction&apos; on DomainClass &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/ParentEntity.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;ParentEntity&apos; on DomainRelationship &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/ParentEntity.DisplayName" xml:space="preserve">
    <value>Parent Entity</value>
    <comment>DisplayName for DomainRole &apos;ParentEntity&apos; on DomainRelationship &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/ParentEntity.PropertyDisplayName" xml:space="preserve">
    <value>Child Entities</value>
    <comment>PropertyDisplayName for DomainRole &apos;ParentEntity&apos; on DomainRelationship &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/ChildEntity.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;ChildEntity&apos; on DomainRelationship &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/ChildEntity.DisplayName" xml:space="preserve">
    <value>Child Entity</value>
    <comment>DisplayName for DomainRole &apos;ChildEntity&apos; on DomainRelationship &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasEntities/ChildEntity.PropertyDisplayName" xml:space="preserve">
    <value>Parent Entity</value>
    <comment>PropertyDisplayName for DomainRole &apos;ChildEntity&apos; on DomainRelationship &apos;EntityHasEntities&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasFields.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;EntityHasFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasFields.DisplayName" xml:space="preserve">
    <value>Entity Has Fields</value>
    <comment>DisplayName for DomainClass &apos;EntityHasFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasFields/Entity.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;Entity&apos; on DomainRelationship &apos;EntityHasFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasFields/Entity.DisplayName" xml:space="preserve">
    <value>Entity</value>
    <comment>DisplayName for DomainRole &apos;Entity&apos; on DomainRelationship &apos;EntityHasFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasFields/Entity.PropertyDisplayName" xml:space="preserve">
    <value>Fields</value>
    <comment>PropertyDisplayName for DomainRole &apos;Entity&apos; on DomainRelationship &apos;EntityHasFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasFields/Field.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;Field&apos; on DomainRelationship &apos;EntityHasFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasFields/Field.DisplayName" xml:space="preserve">
    <value>Field</value>
    <comment>DisplayName for DomainRole &apos;Field&apos; on DomainRelationship &apos;EntityHasFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasFields/Field.PropertyDisplayName" xml:space="preserve">
    <value>Entity</value>
    <comment>PropertyDisplayName for DomainRole &apos;Field&apos; on DomainRelationship &apos;EntityHasFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasViews.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;nHydrateModelHasViews&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasViews.DisplayName" xml:space="preserve">
    <value>NHydrate Model Has Views</value>
    <comment>DisplayName for DomainClass &apos;nHydrateModelHasViews&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasViews/nHydrateModel.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;nHydrateModel&apos; on DomainRelationship &apos;nHydrateModelHasViews&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasViews/nHydrateModel.DisplayName" xml:space="preserve">
    <value>nHydrate Model</value>
    <comment>DisplayName for DomainRole &apos;nHydrateModel&apos; on DomainRelationship &apos;nHydrateModelHasViews&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasViews/nHydrateModel.PropertyDisplayName" xml:space="preserve">
    <value>Views</value>
    <comment>PropertyDisplayName for DomainRole &apos;nHydrateModel&apos; on DomainRelationship &apos;nHydrateModelHasViews&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasViews/View.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;View&apos; on DomainRelationship &apos;nHydrateModelHasViews&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasViews/View.DisplayName" xml:space="preserve">
    <value>View</value>
    <comment>DisplayName for DomainRole &apos;View&apos; on DomainRelationship &apos;nHydrateModelHasViews&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasViews/View.PropertyDisplayName" xml:space="preserve">
    <value>nHydrate Model</value>
    <comment>PropertyDisplayName for DomainRole &apos;View&apos; on DomainRelationship &apos;nHydrateModelHasViews&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewHasFields.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;ViewHasFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewHasFields.DisplayName" xml:space="preserve">
    <value>View Has Fields</value>
    <comment>DisplayName for DomainClass &apos;ViewHasFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewHasFields/View.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;View&apos; on DomainRelationship &apos;ViewHasFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewHasFields/View.DisplayName" xml:space="preserve">
    <value>View</value>
    <comment>DisplayName for DomainRole &apos;View&apos; on DomainRelationship &apos;ViewHasFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewHasFields/View.PropertyDisplayName" xml:space="preserve">
    <value>Fields</value>
    <comment>PropertyDisplayName for DomainRole &apos;View&apos; on DomainRelationship &apos;ViewHasFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewHasFields/ViewField.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;ViewField&apos; on DomainRelationship &apos;ViewHasFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewHasFields/ViewField.DisplayName" xml:space="preserve">
    <value>View Field</value>
    <comment>DisplayName for DomainRole &apos;ViewField&apos; on DomainRelationship &apos;ViewHasFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewHasFields/ViewField.PropertyDisplayName" xml:space="preserve">
    <value>View</value>
    <comment>PropertyDisplayName for DomainRole &apos;ViewField&apos; on DomainRelationship &apos;ViewHasFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasRelationFields.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;nHydrateModelHasRelationFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasRelationFields.DisplayName" xml:space="preserve">
    <value>nHydrate Model Has Relation Fields</value>
    <comment>DisplayName for DomainClass &apos;nHydrateModelHasRelationFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasRelationFields/nHydrateModel.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;nHydrateModel&apos; on DomainRelationship &apos;nHydrateModelHasRelationFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasRelationFields/nHydrateModel.DisplayName" xml:space="preserve">
    <value>nHydrate Model</value>
    <comment>DisplayName for DomainRole &apos;nHydrateModel&apos; on DomainRelationship &apos;nHydrateModelHasRelationFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasRelationFields/nHydrateModel.PropertyDisplayName" xml:space="preserve">
    <value>Relation Fields</value>
    <comment>PropertyDisplayName for DomainRole &apos;nHydrateModel&apos; on DomainRelationship &apos;nHydrateModelHasRelationFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasRelationFields/RelationField.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;RelationField&apos; on DomainRelationship &apos;nHydrateModelHasRelationFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasRelationFields/RelationField.DisplayName" xml:space="preserve">
    <value>Relation Field</value>
    <comment>DisplayName for DomainRole &apos;RelationField&apos; on DomainRelationship &apos;nHydrateModelHasRelationFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateModelHasRelationFields/RelationField.PropertyDisplayName" xml:space="preserve">
    <value>nHydrate Model</value>
    <comment>PropertyDisplayName for DomainRole &apos;RelationField&apos; on DomainRelationship &apos;nHydrateModelHasRelationFields&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasStaticDatum.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;EntityHasStaticDatum&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasStaticDatum.DisplayName" xml:space="preserve">
    <value>Entity Has Static Datum</value>
    <comment>DisplayName for DomainClass &apos;EntityHasStaticDatum&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasStaticDatum/Entity.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;Entity&apos; on DomainRelationship &apos;EntityHasStaticDatum&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasStaticDatum/Entity.DisplayName" xml:space="preserve">
    <value>Entity</value>
    <comment>DisplayName for DomainRole &apos;Entity&apos; on DomainRelationship &apos;EntityHasStaticDatum&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasStaticDatum/Entity.PropertyDisplayName" xml:space="preserve">
    <value>Static Datum</value>
    <comment>PropertyDisplayName for DomainRole &apos;Entity&apos; on DomainRelationship &apos;EntityHasStaticDatum&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasStaticDatum/StaticData.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;StaticData&apos; on DomainRelationship &apos;EntityHasStaticDatum&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasStaticDatum/StaticData.DisplayName" xml:space="preserve">
    <value>Static Data</value>
    <comment>DisplayName for DomainRole &apos;StaticData&apos; on DomainRelationship &apos;EntityHasStaticDatum&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasStaticDatum/StaticData.PropertyDisplayName" xml:space="preserve">
    <value>Entity</value>
    <comment>PropertyDisplayName for DomainRole &apos;StaticData&apos; on DomainRelationship &apos;EntityHasStaticDatum&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasIndexes.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;EntityHasIndexes&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasIndexes.DisplayName" xml:space="preserve">
    <value>Entity Has Indexes</value>
    <comment>DisplayName for DomainClass &apos;EntityHasIndexes&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasIndexes/Entity.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;Entity&apos; on DomainRelationship &apos;EntityHasIndexes&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasIndexes/Entity.DisplayName" xml:space="preserve">
    <value>Entity</value>
    <comment>DisplayName for DomainRole &apos;Entity&apos; on DomainRelationship &apos;EntityHasIndexes&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasIndexes/Entity.PropertyDisplayName" xml:space="preserve">
    <value>Indexes</value>
    <comment>PropertyDisplayName for DomainRole &apos;Entity&apos; on DomainRelationship &apos;EntityHasIndexes&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasIndexes/Index.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;Index&apos; on DomainRelationship &apos;EntityHasIndexes&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasIndexes/Index.DisplayName" xml:space="preserve">
    <value>Index</value>
    <comment>DisplayName for DomainRole &apos;Index&apos; on DomainRelationship &apos;EntityHasIndexes&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityHasIndexes/Index.PropertyDisplayName" xml:space="preserve">
    <value>Entity</value>
    <comment>PropertyDisplayName for DomainRole &apos;Index&apos; on DomainRelationship &apos;EntityHasIndexes&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexHasIndexColumns.Description" xml:space="preserve">
    <value>Description for nHydrate.Dsl.IndexHasIndexColumns</value>
    <comment>Description for DomainClass &apos;IndexHasIndexColumns&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexHasIndexColumns.DisplayName" xml:space="preserve">
    <value>Index Has Index Columns</value>
    <comment>DisplayName for DomainClass &apos;IndexHasIndexColumns&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexHasIndexColumns/Index.Description" xml:space="preserve">
    <value>Description for nHydrate.Dsl.IndexHasIndexColumns.Index</value>
    <comment>Description for DomainRole &apos;Index&apos; on DomainRelationship &apos;IndexHasIndexColumns&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexHasIndexColumns/Index.DisplayName" xml:space="preserve">
    <value>Index</value>
    <comment>DisplayName for DomainRole &apos;Index&apos; on DomainRelationship &apos;IndexHasIndexColumns&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexHasIndexColumns/Index.PropertyDisplayName" xml:space="preserve">
    <value>Index Columns</value>
    <comment>PropertyDisplayName for DomainRole &apos;Index&apos; on DomainRelationship &apos;IndexHasIndexColumns&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexHasIndexColumns/IndexColumn.Description" xml:space="preserve">
    <value>Description for nHydrate.Dsl.IndexHasIndexColumns.IndexColumn</value>
    <comment>Description for DomainRole &apos;IndexColumn&apos; on DomainRelationship &apos;IndexHasIndexColumns&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexHasIndexColumns/IndexColumn.DisplayName" xml:space="preserve">
    <value>Index Column</value>
    <comment>DisplayName for DomainRole &apos;IndexColumn&apos; on DomainRelationship &apos;IndexHasIndexColumns&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexHasIndexColumns/IndexColumn.PropertyDisplayName" xml:space="preserve">
    <value>Index</value>
    <comment>PropertyDisplayName for DomainRole &apos;IndexColumn&apos; on DomainRelationship &apos;IndexHasIndexColumns&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/BigInt.DisplayName" xml:space="preserve">
    <value>BigInt</value>
    <comment>Display name for EnumerationLiteral &apos;BigInt&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/BigInt.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;BigInt&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Binary.DisplayName" xml:space="preserve">
    <value>Binary</value>
    <comment>Display name for EnumerationLiteral &apos;Binary&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Binary.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Binary&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Bit.DisplayName" xml:space="preserve">
    <value>Bit</value>
    <comment>Display name for EnumerationLiteral &apos;Bit&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Bit.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Bit&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Char.DisplayName" xml:space="preserve">
    <value>Char</value>
    <comment>Display name for EnumerationLiteral &apos;Char&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Char.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Char&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Date.DisplayName" xml:space="preserve">
    <value>Date</value>
    <comment>Display name for EnumerationLiteral &apos;Date&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Date.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Date&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/DateTime.DisplayName" xml:space="preserve">
    <value>DateTime</value>
    <comment>Display name for EnumerationLiteral &apos;DateTime&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/DateTime.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;DateTime&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/DateTime2.DisplayName" xml:space="preserve">
    <value>DateTime2</value>
    <comment>Display name for EnumerationLiteral &apos;DateTime2&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/DateTime2.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;DateTime2&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/DateTimeOffset.DisplayName" xml:space="preserve">
    <value>DateTimeOffset</value>
    <comment>Display name for EnumerationLiteral &apos;DateTimeOffset&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/DateTimeOffset.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;DateTimeOffset&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Decimal.DisplayName" xml:space="preserve">
    <value>Decimal</value>
    <comment>Display name for EnumerationLiteral &apos;Decimal&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Decimal.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Decimal&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Float.DisplayName" xml:space="preserve">
    <value>Float</value>
    <comment>Display name for EnumerationLiteral &apos;Float&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Float.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Float&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Image.DisplayName" xml:space="preserve">
    <value>Image</value>
    <comment>Display name for EnumerationLiteral &apos;Image&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Image.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Image&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Int.DisplayName" xml:space="preserve">
    <value>Int</value>
    <comment>Display name for EnumerationLiteral &apos;Int&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Int.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Int&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Money.DisplayName" xml:space="preserve">
    <value>Money</value>
    <comment>Display name for EnumerationLiteral &apos;Money&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Money.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Money&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/NChar.DisplayName" xml:space="preserve">
    <value>NChar</value>
    <comment>Display name for EnumerationLiteral &apos;NChar&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/NChar.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;NChar&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/NText.DisplayName" xml:space="preserve">
    <value>NText</value>
    <comment>Display name for EnumerationLiteral &apos;NText&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/NText.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;NText&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/NVarChar.DisplayName" xml:space="preserve">
    <value>NVarChar</value>
    <comment>Display name for EnumerationLiteral &apos;NVarChar&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/NVarChar.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;NVarChar&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Real.DisplayName" xml:space="preserve">
    <value>Real</value>
    <comment>Display name for EnumerationLiteral &apos;Real&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Real.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Real&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/SmallDateTime.DisplayName" xml:space="preserve">
    <value>SmallDateTime</value>
    <comment>Display name for EnumerationLiteral &apos;SmallDateTime&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/SmallDateTime.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;SmallDateTime&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/SmallInt.DisplayName" xml:space="preserve">
    <value>SmallInt</value>
    <comment>Display name for EnumerationLiteral &apos;SmallInt&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/SmallInt.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;SmallInt&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/SmallMoney.DisplayName" xml:space="preserve">
    <value>SmallMoney</value>
    <comment>Display name for EnumerationLiteral &apos;SmallMoney&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/SmallMoney.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;SmallMoney&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Structured.DisplayName" xml:space="preserve">
    <value>Structured</value>
    <comment>Display name for EnumerationLiteral &apos;Structured&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Structured.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Structured&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Text.DisplayName" xml:space="preserve">
    <value>Text</value>
    <comment>Display name for EnumerationLiteral &apos;Text&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Text.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Text&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Time.DisplayName" xml:space="preserve">
    <value>Time</value>
    <comment>Display name for EnumerationLiteral &apos;Time&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Time.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Time&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Timestamp.DisplayName" xml:space="preserve">
    <value>Timestamp</value>
    <comment>Display name for EnumerationLiteral &apos;Timestamp&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Timestamp.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Timestamp&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/TinyInt.DisplayName" xml:space="preserve">
    <value>TinyInt</value>
    <comment>Display name for EnumerationLiteral &apos;TinyInt&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/TinyInt.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;TinyInt&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Udt.DisplayName" xml:space="preserve">
    <value>Udt</value>
    <comment>Display name for EnumerationLiteral &apos;Udt&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Udt.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Udt&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/UniqueIdentifier.DisplayName" xml:space="preserve">
    <value>UniqueIdentifier</value>
    <comment>Display name for EnumerationLiteral &apos;UniqueIdentifier&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/UniqueIdentifier.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;UniqueIdentifier&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/VarBinary.DisplayName" xml:space="preserve">
    <value>VarBinary</value>
    <comment>Display name for EnumerationLiteral &apos;VarBinary&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/VarBinary.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;VarBinary&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/VarChar.DisplayName" xml:space="preserve">
    <value>VarChar</value>
    <comment>Display name for EnumerationLiteral &apos;VarChar&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/VarChar.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;VarChar&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Variant.DisplayName" xml:space="preserve">
    <value>Variant</value>
    <comment>Display name for EnumerationLiteral &apos;Variant&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Variant.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Variant&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Xml.DisplayName" xml:space="preserve">
    <value>Xml</value>
    <comment>Display name for EnumerationLiteral &apos;Xml&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DataTypeConstants/Xml.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Xml&apos; on DomainEnumeration &apos;DataTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.RelationshipTypeConstants/OneToOne.DisplayName" xml:space="preserve">
    <value>OneToOne</value>
    <comment>Display name for EnumerationLiteral &apos;OneToOne&apos; on DomainEnumeration &apos;RelationshipTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.RelationshipTypeConstants/OneToOne.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;OneToOne&apos; on DomainEnumeration &apos;RelationshipTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.RelationshipTypeConstants/OneToMany.DisplayName" xml:space="preserve">
    <value>OneToMany</value>
    <comment>Display name for EnumerationLiteral &apos;OneToMany&apos; on DomainEnumeration &apos;RelationshipTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.RelationshipTypeConstants/OneToMany.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;OneToMany&apos; on DomainEnumeration &apos;RelationshipTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.RelationshipTypeConstants/ManyToMany.DisplayName" xml:space="preserve">
    <value>ManyToMany</value>
    <comment>Display name for EnumerationLiteral &apos;ManyToMany&apos; on DomainEnumeration &apos;RelationshipTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.RelationshipTypeConstants/ManyToMany.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;ManyToMany&apos; on DomainEnumeration &apos;RelationshipTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IdentityTypeConstants/None.DisplayName" xml:space="preserve">
    <value>None</value>
    <comment>Display name for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;IdentityTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IdentityTypeConstants/None.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;IdentityTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IdentityTypeConstants/Database.DisplayName" xml:space="preserve">
    <value>Database</value>
    <comment>Display name for EnumerationLiteral &apos;Database&apos; on DomainEnumeration &apos;IdentityTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IdentityTypeConstants/Database.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Database&apos; on DomainEnumeration &apos;IdentityTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IdentityTypeConstants/Code.DisplayName" xml:space="preserve">
    <value>Code</value>
    <comment>Display name for EnumerationLiteral &apos;Code&apos; on DomainEnumeration &apos;IdentityTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IdentityTypeConstants/Code.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Code&apos; on DomainEnumeration &apos;IdentityTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.TypedEntityConstants/None.DisplayName" xml:space="preserve">
    <value>None</value>
    <comment>Display name for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;TypedEntityConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.TypedEntityConstants/None.Description" xml:space="preserve">
    <value>This is not a typed entity</value>
    <comment>Description for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;TypedEntityConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.TypedEntityConstants/DatabaseTable.DisplayName" xml:space="preserve">
    <value>DatabaseTable</value>
    <comment>Display name for EnumerationLiteral &apos;DatabaseTable&apos; on DomainEnumeration &apos;TypedEntityConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.TypedEntityConstants/DatabaseTable.Description" xml:space="preserve">
    <value>The typed entity has a backing database table</value>
    <comment>Description for EnumerationLiteral &apos;DatabaseTable&apos; on DomainEnumeration &apos;TypedEntityConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.TypedEntityConstants/EnumOnly.DisplayName" xml:space="preserve">
    <value>EnumOnly</value>
    <comment>Display name for EnumerationLiteral &apos;EnumOnly&apos; on DomainEnumeration &apos;TypedEntityConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.TypedEntityConstants/EnumOnly.Description" xml:space="preserve">
    <value>The typed entity is a code-only enumeration</value>
    <comment>Description for EnumerationLiteral &apos;EnumOnly&apos; on DomainEnumeration &apos;TypedEntityConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexTypeConstants/PrimaryKey.DisplayName" xml:space="preserve">
    <value>PrimaryKey</value>
    <comment>Display name for EnumerationLiteral &apos;PrimaryKey&apos; on DomainEnumeration &apos;IndexTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexTypeConstants/PrimaryKey.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;PrimaryKey&apos; on DomainEnumeration &apos;IndexTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexTypeConstants/IsIndexed.DisplayName" xml:space="preserve">
    <value>IsIndexed</value>
    <comment>Display name for EnumerationLiteral &apos;IsIndexed&apos; on DomainEnumeration &apos;IndexTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexTypeConstants/IsIndexed.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;IsIndexed&apos; on DomainEnumeration &apos;IndexTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexTypeConstants/User.DisplayName" xml:space="preserve">
    <value>User</value>
    <comment>Display name for EnumerationLiteral &apos;User&apos; on DomainEnumeration &apos;IndexTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.IndexTypeConstants/User.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;User&apos; on DomainEnumeration &apos;IndexTypeConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DeleteActionConstants/NoAction.DisplayName" xml:space="preserve">
    <value>NoAction</value>
    <comment>Display name for EnumerationLiteral &apos;NoAction&apos; on DomainEnumeration &apos;DeleteActionConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DeleteActionConstants/NoAction.Description" xml:space="preserve">
    <value>Take no action on principal entity deletion</value>
    <comment>Description for EnumerationLiteral &apos;NoAction&apos; on DomainEnumeration &apos;DeleteActionConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DeleteActionConstants/Cascade.DisplayName" xml:space="preserve">
    <value>Cascade</value>
    <comment>Display name for EnumerationLiteral &apos;Cascade&apos; on DomainEnumeration &apos;DeleteActionConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DeleteActionConstants/Cascade.Description" xml:space="preserve">
    <value>Case delete of child objects</value>
    <comment>Description for EnumerationLiteral &apos;Cascade&apos; on DomainEnumeration &apos;DeleteActionConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DeleteActionConstants/SetNull.DisplayName" xml:space="preserve">
    <value>SetNull</value>
    <comment>Display name for EnumerationLiteral &apos;SetNull&apos; on DomainEnumeration &apos;DeleteActionConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.DeleteActionConstants/SetNull.Description" xml:space="preserve">
    <value>On principal entity deletion, set foreign key to null</value>
    <comment>Description for EnumerationLiteral &apos;SetNull&apos; on DomainEnumeration &apos;DeleteActionConstants&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityShape.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;EntityShape&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityShape.DisplayName" xml:space="preserve">
    <value>Entity Shape</value>
    <comment>DisplayName for DomainClass &apos;EntityShape&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityShape/FillColor.Description" xml:space="preserve">
    <value>Description for nHydrate.Dsl.EntityShape.Fill Color</value>
    <comment>Description for DomainProperty &apos;FillColor&apos; on DomainClass &apos;EntityShape&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityShape/FillColor.DisplayName" xml:space="preserve">
    <value>Fill Color</value>
    <comment>DisplayName for DomainProperty &apos;FillColor&apos; on DomainClass &apos;EntityShape&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityShape/TextColor.Description" xml:space="preserve">
    <value>Description for nHydrate.Dsl.EntityShape.Text Color</value>
    <comment>Description for DomainProperty &apos;TextColor&apos; on DomainClass &apos;EntityShape&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityShape/TextColor.DisplayName" xml:space="preserve">
    <value>Text Color</value>
    <comment>DisplayName for DomainProperty &apos;TextColor&apos; on DomainClass &apos;EntityShape&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityShape/OutlineColor.Description" xml:space="preserve">
    <value>Description for nHydrate.Dsl.EntityShape.Outline Color</value>
    <comment>Description for DomainProperty &apos;OutlineColor&apos; on DomainClass &apos;EntityShape&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityShape/OutlineColor.DisplayName" xml:space="preserve">
    <value>Outline Color</value>
    <comment>DisplayName for DomainProperty &apos;OutlineColor&apos; on DomainClass &apos;EntityShape&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityShape/OutlineDashStyle.Description" xml:space="preserve">
    <value>Description for nHydrate.Dsl.EntityShape.Outline Dash Style</value>
    <comment>Description for DomainProperty &apos;OutlineDashStyle&apos; on DomainClass &apos;EntityShape&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityShape/OutlineDashStyle.DisplayName" xml:space="preserve">
    <value>Outline Dash Style</value>
    <comment>DisplayName for DomainProperty &apos;OutlineDashStyle&apos; on DomainClass &apos;EntityShape&apos;</comment>
  </data>
  <data name="EntityShapeEntityFieldCompartmentTitle" xml:space="preserve">
    <value>Fields</value>
    <comment>Compartment title</comment>
  </data>
  <data name="nHydrate.Dsl.ViewShape.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;ViewShape&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.ViewShape.DisplayName" xml:space="preserve">
    <value>View Shape</value>
    <comment>DisplayName for DomainClass &apos;ViewShape&apos;</comment>
  </data>
  <data name="ViewShapeViewFieldCompartmentTitle" xml:space="preserve">
    <value>Fields</value>
    <comment>Compartment title</comment>
  </data>
  <data name="nHydrate.Dsl.EntityAssociationConnector.Description" xml:space="preserve">
    <value>Connect two entities</value>
    <comment>Description for DomainClass &apos;EntityAssociationConnector&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.EntityAssociationConnector.DisplayName" xml:space="preserve">
    <value>Entity Association Connector</value>
    <comment>DisplayName for DomainClass &apos;EntityAssociationConnector&apos;</comment>
  </data>
  <data name="FormatList" xml:space="preserve">
    <value>nHydrate ORM Modeler (*.nhydrate)|*.nhydrate</value>
    <comment>A list of file format specifiers for the Save dialog box</comment>
  </data>
  <data name="ModelExplorerTitle" xml:space="preserve">
    <value>nHydrate Explorer</value>
    <comment>Model Explorer Toolwindow title</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateDiagram.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;nHydrateDiagram&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateDiagram.DisplayName" xml:space="preserve">
    <value>nHydrate Diagram</value>
    <comment>DisplayName for DomainClass &apos;nHydrateDiagram&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateDiagram/DisplayType.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainProperty &apos;DisplayType&apos; on DomainClass &apos;nHydrateDiagram&apos;</comment>
  </data>
  <data name="nHydrate.Dsl.nHydrateDiagram/DisplayType.DisplayName" xml:space="preserve">
    <value>Display Type</value>
    <comment>DisplayName for DomainProperty &apos;DisplayType&apos; on DomainClass &apos;nHydrateDiagram&apos;</comment>
  </data>
  <data name="nHydrateToolboxTab" xml:space="preserve">
    <value>nHydrate</value>
    <comment>Toolbox item tab name</comment>
  </data>
  <data name="EntityToolboxItem" xml:space="preserve">
    <value>Entity</value>
    <comment>Toolbox item name</comment>
  </data>
  <data name="EntityToolboxTooltip" xml:space="preserve">
    <value>Create an Entity</value>
    <comment>Toolbox tooltip text</comment>
  </data>
  <data name="AssociationToolboxItem" xml:space="preserve">
    <value>Association</value>
    <comment>Toolbox item name</comment>
  </data>
  <data name="AssociationToolboxTooltip" xml:space="preserve">
    <value>Create a relation between two entities</value>
    <comment>Toolbox tooltip text</comment>
  </data>
  <data name="ViewToolboxItem" xml:space="preserve">
    <value>View</value>
    <comment>Toolbox item name</comment>
  </data>
  <data name="ViewToolboxTooltip" xml:space="preserve">
    <value>Create a View</value>
    <comment>Toolbox tooltip text</comment>
  </data>
  <data name="UnresolvedToolboxItem" xml:space="preserve">
    <value>ToolboxItem {0} was not found</value>
    <comment>Invalid toolId</comment>
  </data>
  <data name="UnsupportedToolboxFormat" xml:space="preserve">
    <value>Unsupported toolbox format: {0}</value>
    <comment>Unsupported format Id</comment>
  </data>
  <data name="UnrecognizedElementType" xml:space="preserve">
    <value>ElementType {0} is not recognized as a type of domain class which belongs to this domain model.</value>
    <comment>Incorrect ElementType passed in to Model.CreateElement method</comment>
  </data>
  <data name="UnrecognizedElementLinkType" xml:space="preserve">
    <value>ElementLinkType {0} is not recognized as a type of domain relationship which belongs to this domain model.</value>
    <comment>Incorrect ElementLinkType passed in to Model.CreateElementLink method</comment>
  </data>
  <data name="AmbiguousSchema" xml:space="preserve">
    <value>More than one schema found for target namespace &apos;{0}&apos;, use the first one at &apos;{1}&apos;.</value>
    <comment>Serialization Warning: AmbiguousSchema</comment>
  </data>
  <data name="ExpectingFullFormRelationship" xml:space="preserve">
    <value>Element &apos;{0}&apos; is treated as the target role-player of a relationship &apos;{1}&apos; instance, which should be serialized in full-form.</value>
    <comment>Serialization Warning: ExpectingFullFormRelationship</comment>
  </data>
  <data name="ExpectingShortFormRelationship" xml:space="preserve">
    <value>Instances of relationship &apos;{0}&apos; should be serialized in short-form.</value>
    <comment>Serialization Warning: ExpectingShortFormRelationship</comment>
  </data>
  <data name="IgnoredPropertyValue" xml:space="preserve">
    <value>Invalid property value &apos;{0}&apos; for property &apos;{1}&apos; with type &apos;{2}&apos;, ignored.</value>
    <comment>Serialization Warning: IgnoredPropertyValue</comment>
  </data>
  <data name="MissingId" xml:space="preserve">
    <value>Missing &apos;Id&apos; attribute, a new Guid &apos;{0}&apos; is auto-generated.</value>
    <comment>Serialization Warning: MissingId</comment>
  </data>
  <data name="MonikerResolvedToDuplicateLink" xml:space="preserve">
    <value>Resolving moniker &apos;{0}&apos; causes a duplicate link to be created, so the link and the moniker are ignored.</value>
    <comment>Serialization Warning: MonikerResolvedToDuplicateLink</comment>
  </data>
  <data name="NoSchema" xml:space="preserve">
    <value>Cannot find a schema that defines target namespace &apos;{0}&apos;, schema validation skipped.</value>
    <comment>Serialization Warning: NoSchema</comment>
  </data>
  <data name="UnexpectedXmlElement" xml:space="preserve">
    <value>Unexpected XML element &apos;{0}&apos;, ignored.</value>
    <comment>Serialization Warning: UnexpectedXmlElement</comment>
  </data>
  <data name="AmbiguousMoniker" xml:space="preserve">
    <value>Ambiguous moniker &apos;{0}&apos; encountered. It is used for both &apos;{1}&apos; and &apos;{2}&apos;.</value>
    <comment>Serialization Error: AmbiguousMoniker</comment>
  </data>
  <data name="CannotMonikerizeElement" xml:space="preserve">
    <value>Instances of DomainClass &apos;{0}&apos; cannot be serialized as a moniker.
A DomainClass can be serialized as a moniker only if 
1) it has a defined/inherited DomainProperty marked as IsMonikerKey=true, or 
2) it is marked/inherited with SerializeId=true.</value>
    <comment>Serialization Error: CannotMonikerizeElement</comment>
  </data>
  <data name="CannotOpenDocument" xml:space="preserve">
    <value>Error encountered, check Error List window for details.</value>
    <comment>Serialization Error: CannotOpenDocument</comment>
  </data>
  <data name="CannotSaveDocument" xml:space="preserve">
    <value>Error encountered, check Error List window for details.</value>
    <comment>Serialization Error: CannotSaveDocument</comment>
  </data>
  <data name="DanglingRelationship" xml:space="preserve">
    <value>Relationship &apos;{0}&apos; instance is missing target role-player.</value>
    <comment>Serialization Error: DanglingRelationship</comment>
  </data>
  <data name="InvalidPropertyValue" xml:space="preserve">
    <value>Invalid property value &apos;{0}&apos; for property &apos;{1}&apos; with type &apos;{2}&apos;.</value>
    <comment>Serialization Error: InvalidPropertyValue</comment>
  </data>
  <data name="MissingMoniker" xml:space="preserve">
    <value>Missing moniker. A moniker is expected in attribute &apos;{0}&apos;.</value>
    <comment>Serialization Error: MissingMoniker</comment>
  </data>
  <data name="MissingTransaction" xml:space="preserve">
    <value>This must be called within the context of an active transaction.</value>
    <comment>Serialization Error: MissingTransaction</comment>
  </data>
  <data name="UnresolvedMoniker" xml:space="preserve">
    <value>Cannot resolve moniker &apos;{0}&apos;.</value>
    <comment>Serialization Error: UnresolvedMoniker</comment>
  </data>
  <data name="VersionMismatch" xml:space="preserve">
    <value>Unsupported version &apos;{0}&apos;, can only support &apos;{1}&apos;.</value>
    <comment>Serialization Error: VersionMismatch</comment>
  </data>
  <data name="CannotCloseExistingDiagramDocument" xml:space="preserve">
    <value>Diagram file &apos;{0}&apos; cannot be closed.</value>
    <comment>User cancel closing diagram file. Hence, the DSL model file cannot be opened</comment>
  </data>
  <data name="BindingErrorOccurred" xml:space="preserve">
    <value>Extensions for this designer may not be found as a MEF binding error has occurred. The error that occurred was:
{0}</value>
    <comment>MEF binding error occurred - exception message being logged in the error window so the user is aware.</comment>
  </data>
  <data name="InvalidSaveRootElementType" xml:space="preserve">
    <value>&apos;{0}&apos; is not a valid root element type.</value>
    <comment>Exception message used if an invalid root element type is passed to IDomainModelSerializer.SaveModel / SaveModelAndDiagram</comment>
  </data>
  <data name="InvalidSaveDiagramType" xml:space="preserve">
    <value>&apos;{0}&apos; is not a valid diagram type.</value>
    <comment>Exception message used if an invalid diagram type is passed to IDomainModelSerializer.SaveModelAndDiagram</comment>
  </data>
  <data name="MinimumMultiplicityMissingLink" xml:space="preserve">
    <value>{0} {1} has no {2}.</value>
    <comment>Multiplicity underflow validation.</comment>
  </data>
  <data name="SaveOperationCancelled" xml:space="preserve">
    <value>Save operation cancelled.</value>
    <comment>Message when save is cancelled on validation errors</comment>
  </data>
  <data name="SaveValidationFailed" xml:space="preserve">
    <value>There were validation errors, continue save?</value>
    <comment>Message when validation errors are found on save</comment>
  </data>
  <data name="UnloadableSaveValidationFailed" xml:space="preserve">
    <value>There were validation errors. Continuing to save may cause the file to become unloadable, do you want to continue?</value>
    <comment>Message when validation errors are found on save that will cause file to become unloadable</comment>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="EntityShapeEntityIconDecoratorDefaultImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\Entity.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Icon decorator default image</comment>
  </data>
  <data name="ViewShapeViewIconDecoratorDefaultImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\view.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Icon decorator default image</comment>
  </data>
  <data name="EntityExplorerImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\Entity.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="FieldExplorerImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\field.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="ViewExplorerImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\view.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="ViewFieldExplorerImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\field.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="nHydrateModelExplorerImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\nhydrate.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="IndexExplorerImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\index.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="IndexColumnExplorerImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\field.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="EntityToolboxBitmap" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\entity.bmp;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="AssociationToolboxBitmap" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\resources\exampleconnectortoolbitmap.bmp;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="ViewToolboxBitmap" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\view.bmp;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
</root>


